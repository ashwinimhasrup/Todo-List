name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
      - 'release-*'
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deploy environment'
        required: true
        default: 'dev'

jobs:
  code-review:
    name: Code Review Required
    runs-on: self-hosted
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Run linting
        run: npm run lint

      - name: Code quality check
        run: |
          echo "Running code quality checks..."
          echo "PR requires manual review and approval before merge"


  deploy-dev:
    runs-on: self-hosted
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev'
    environment: dev
    steps:
      - uses: actions/checkout@v4

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Image
        run: |
          IMAGE=${{ secrets.DOCKER_USERNAME }}/todo:${{ github.sha }}
          docker build -t $IMAGE .
          docker push $IMAGE

      - name: Configure Kube
        run: |
          echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV
          kubectl cluster-info

      - name: Deploy to Dev
        run: |
          IMAGE=${{ secrets.DOCKER_USERNAME }}/todo:${{ github.sha }}
          kubectl create namespace dev --dry-run=client -o yaml | kubectl apply -f -
          for f in k8s/dev/*.yaml; do
            sed "s|todo:.*|$IMAGE|g" $f | kubectl apply -n dev -f -
          done
          kubectl rollout status deployment -n dev todolist

  deploy-qa:
    runs-on: self-hosted
    if: github.ref == 'refs/heads/develop'
    environment: qa
    steps:
      - uses: actions/checkout@v4

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Image
        run: |
          IMAGE=${{ secrets.DOCKER_USERNAME }}/todo:${{ github.sha }}
          docker build -t $IMAGE .
          docker push $IMAGE

      - name: Configure Kube
        run: |
          echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV
          kubectl cluster-info

      - name: Deploy to QA
        run: |
          IMAGE=${{ secrets.DOCKER_USERNAME }}/todo:${{ github.sha }}
          kubectl create namespace qa --dry-run=client -o yaml | kubectl apply -f -
          for f in k8s/dev/*.yaml; do
            sed "s|todo:.*|$IMAGE|g" $f | kubectl apply -n qa -f -
          done
          kubectl rollout status deployment -n qa todolist

  deploy-staging:
    runs-on: self-hosted
    if: startsWith(github.ref, 'refs/heads/release-')
    environment: staging
    steps:
      - uses: actions/checkout@v4

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Image
        run: |
          IMAGE=${{ secrets.DOCKER_USERNAME }}/todo:${{ github.sha }}
          docker build -t $IMAGE .
          docker push $IMAGE

      - name: Configure Kube
        run: |
          echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV
          kubectl cluster-info

      - name: Deploy to Staging
        run: |
          IMAGE=${{ secrets.DOCKER_USERNAME }}/todo:${{ github.sha }}
          kubectl create namespace staging --dry-run=client -o yaml | kubectl apply -f -
          for f in k8s/staging/*.yaml; do
            sed "s|todo:.*|$IMAGE|g" $f | kubectl apply -n staging -f -
          done
          kubectl rollout status deployment -n staging todolist

  deploy-prod:
    runs-on: self-hosted
    if: startsWith(github.ref, 'refs/tags/v')
    environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Image
        run: |
          IMAGE=${{ secrets.DOCKER_USERNAME }}/todo:${{ github.sha }}
          docker build -t $IMAGE .
          docker push $IMAGE

      - name: Configure Kube
        run: |
          echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV
          kubectl cluster-info

      - name: Deploy to Production
        run: |
          IMAGE=${{ secrets.DOCKER_USERNAME }}/todo:${{ github.sha }}
          kubectl create namespace prod --dry-run=client -o yaml | kubectl apply -f -
          for f in k8s/prod/*.yaml; do
            sed "s|todo:.*|$IMAGE|g" $f | kubectl apply -n prod -f -
          done
          kubectl rollout status deployment -n prod todolist

name: CD Pipeline

on:
  push:
    branches: 
      - main
      - develop
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed
    branches:
      - main
      - develop

env:
  NODE_VERSION: '18.x'

jobs:
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    environment: staging
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create staging environment
        run: |
          echo "NODE_ENV=staging" > .env.staging
          echo "PORT=3000" >> .env.staging
          echo "MONGODB_URI=${{ secrets.STAGING_MONGODB_URI }}" >> .env.staging

      - name: Deploy to staging server
        run: |
          echo "Deploying to staging environment"

      - name: Health check
        run: |
          echo "Running staging health check"

      - name: Notify team
        run: |
          echo "Staging deployment completed"

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --production

      - name: Create production environment
        run: |
          echo "NODE_ENV=production" > .env.production
          echo "PORT=3000" >> .env.production
          echo "MONGODB_URI=${{ secrets.PRODUCTION_MONGODB_URI }}" >> .env.production

      - name: Deploy to production server
        run: |
          echo "Deploying to production environment"
      
      - name: Health check
        run: |
          echo "Running production health check"
         
      - name: Create release tag
        run: |
          VERSION=$(date +%Y%m%d%H%M%S)
          git tag "release-$VERSION"
          echo "Created release tag: release-$VERSION"

      - name: Notify team
        run: |
          echo "Production deployment completed successfully"

 